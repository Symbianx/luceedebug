/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

tasks.register("hello") {
    doLast {
        println("hello 1")
    }
}

tasks.register("hello2") {
    dependsOn("hello")
    doLast {
        println("hello 2")
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")
    implementation("org.ow2.asm:asm:9.3")
    implementation("org.ow2.asm:asm-util:9.3")
    implementation(project(":luceedebug"))
}

application {
    // Define the main class for the application.
    mainClass.set("asm.use.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// sourceSets {                                
//     main {                                  
//         java.srcDir("src/main/java")
//     }
// }


tasks.register("buildTestSource1") {
    dependsOn("classes")
    doLast {
        javaexec {
            mainClass.set("asm.use.App")
            // classpath = sourceSets["main"].runtimeClasspath
            classpath(sourceSets["main"].runtimeClasspath)
        }
    }
}

tasks.register("runTestDriver1") {
    dependsOn("classes")
    doLast {
        javaexec {
            mainClass.set("asm.use.TestDriver1")
            // classpath = sourceSets["main"].runtimeClasspath
            classpath(sourceSets["main"].runtimeClasspath)
        }
    }
}

tasks.register("buildAgentJar") {
    
}

tasks.register("runInstrumenter") {
    dependsOn("classes")
    doLast {
        javaexec {
            jvmArgs = mutableListOf(
                "-javaagent:" + File(rootProject.projectDir.getAbsolutePath() + "/luceedebug/build/libs/luceedebug.jar").getAbsolutePath() 
            )
            //classpath += FileCollection("lel/")
            mainClass.set("asm.use.InstrumenterDriver")
            // classpath = sourceSets["main"].runtimeClasspath
            classpath(sourceSets["main"].runtimeClasspath)
            // classpath += files(File(rootProject.projectDir.getAbsolutePath() + "/luceedebug/build/libs").getAbsolutePath())
        }
    }
}